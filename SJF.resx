<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGUAAABICAYAAADvTjsnAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAF0FJREFUeF7tnHlcTfn7wO/t3ttdu+2lhQYpGlIZW7KMVJaMfR0h29hHhqE00jRj
        UJqsMZUpUqMpilKWpBhhkDWFFor27XZb7np+z5Ov79eXT4h8/V5Tf7xfp57znM855/N8nufzfJZzaRRF
        tfP/DKKwnU8LUdjOp4UobOfTQhS282khCtv5tBCFH4u8R9dneG+Yc+r2zZSF8D/91fPtPIco/BicSgj9
        WY1LowRsGiUU0KjFC0amy+WNOiTdtg5R2JrIpfUGP7ovOsOFWwl5NMpAlydVV6NRahwa1UGLRt26fm6p
        Uinjka5tqxCFrUXJs2zH6WOtc4UqYAB1jnz1CteLF9JOrfPz+yFGR51GqYPXGAhp1K5t3/0hFpVYkspo
        ixCFH4pCIRPcvJ60coCNRpU6eAQHbtPVSFX2Z+SuXZJGURe5XKJ57crp1UsXTrkhZNEoHfCcpQucMp7k
        3/qKVF5bgyj8EGSyBt2oyB27OhqzpOp8GqWvSaP27v7hcP8vNKpMP6NRyxcPu3ztyol1CrlEu05cZXH8
        2EG/MU42hTxVGmVvb/q0vCxvKKnctgRR+L5IGmtNNnuvSNTRVKH4YBAjI5Y0MzN9vkIhVROJnvVJvxS9
        zsm+Q6WRHo1av2Zaan19Vfe6usqee3Z7R5h2Va9lQyIQGbFzL6nstgRR+D7U1pT0cRpqViSEfoKnyqB4
        XBa1auXcc2JxZfeX9aSSOuNzZ2N+7mhAV/bv06G4X1+jwm6mGrU8MIgKg0ZlZf4952X9tghR2FLyczKm
        GWpAxw0hiA+dOhvggXG40J8IIP2dOtU2K/P+1TlKpYKbmXljzrBhA+9rCPgKAYdLMeARBFy6kg19ixD6
        locPrk8n3aMtQRS2AHrGtaTlJgZQsVCpfCaNsulpXn0+5cymsLDf9js69S8w76FbxwfDcCEd1tNTE+no
        cBrZqioUh8mguCwm1ae3RYV5tw6VXDCoKlyf8/DGDMJ92hRE4bugVMrZFy4c9ej8mYqiySOg0vv2Ma+m
        02mUYUcB5enllpickrTxTPJJn+49upaqqbEoDhiOBee1wEiLXMffCA/z21te9njwpYsJa4VQhiqcy32U
        0W4UkvBtgEG4CSeCturo0Cg6hCqhhgq1a7fvgfz8hxMiIkL2f++xLEXXUFXGhs6+m5lBJQuMwQQ9DTW6
        cqHruOtpKXEejQ01XV6Ul3Xvr1lq4ClqEPJyHrR7ClH4JqBfUA07sC1IX5PelGHxBHSKAZXu7bM+7lzK
        yR9uZFxemJJyav3YsSPysJ9QA69QAz2LbnxxYkKoj7i2rNerZeY9uj5NEzwNQ2B25jWXV8+3NYjC5sCQ
        FRjgHiGEVs1mqFBGhrqSKdPGXtfV51EcqFQNMFSvzz8TDbW1KdTi05vCEQcyqmXfjEyvKMsdRlFKBqnc
        x3k3J+IAEj0l+97fc0k6bQmikIySGbznx4PakLqy6XRIedlNYctxzKAHDg62D61suhebmXWsQUNgFoaj
        eD11GvVX6rH1GO7IZT6n8MndsSaGLKkArrt7K30eSactQRSSOB4duE1fjUEJWaqUGleVUtdUpTgQltjg
        IRi+OGwV8J7nGRgPDDPAUq/uWeEDJ1JZr1L8NGuUiQFfLACDZ1y/sIyk8wmhy2UNOnW1JT2LCu+NyX94
        dWptTZEVBWGcoNsqEIWvknE1aYWlqa6YS6ODQThUTEy4X0ODuPPDR3dmHgjbFWRp2bWCCYYQsJmUnpBB
        /eK15IS4psSKVBaJ0uKHIz7vriZig6esWDYr5VhM0LbY6EDfqIjdO/84uHNPRNguYPduJDw0YG/wvp9C
        And7he0KcA/fvtUtyttrUfxG9wUJ69xmn1m5bPqFGTMcbkwYPyhr7Jj+D5ycLB8PH27+dKidedGgAWal
        /b8wq7Du1bHaqqdxtUU37XpTE7VGE2OO1EiPoeigxVTqwXhLFzxcWwjhGBodhlRsaDj+EmBSA2iBrJsh
        jUpPPbZGLmvUJr3Th0AUvkxB/vXJA630yzAkCdgMavdu/zCFQs6/eTt9ga4+Q86B1s1CD4EH7ajPlR2N
        CtqOLYtUVnOUl+V+aWOpW8GAl8epFj54Hx+OTQNQ8EIuyLlMOvyt0gSm1hwMkQRUEUyv/wULyvg3cI4J
        1+IRUYW/EbYqHQBPR0APy8Fx0/N7Q6hmMp/Dwmd4bigM09rQD44Y3Lk0+/5ll8aG6n9nkx8KUfiC2ppi
        6+lfWedw4QFwHKGpSaNCDvj9dj41fn1Q8K8h+jp8uSq2HqhAR/seeRk3kpeSynkbZaV5Q22sjcq40DJZ
        HHpTBdLB0Jg8sOG+NLg/h8sEOZNSgUEnAwzDVGVApbPgf6horHDQU9diUwOHWOcZGHIUHJDxQIaVi16M
        fw/ob1rq5jYr1Wvj0kRv72/j/Pw2Hgnw/zFqZ4BPZEjQ9kMhIduCw8L8A8PCdu31cF+RKORDiGayKHU+
        jxo92j4ncL9v+LG4MN/II4E7Fy+efEUDPApDtjou2i2cfC09Pem7+rpKc9I7tgSi8F/QPdy+TtWECscM
        auWyGRdNOnPrcezBw8pi0ZU8rDgowttzYWJ5Wf57z+7CANKuf9+u5apsOhhDpckwaIwmz4EjX8imZsyc
        cuvgodA9Glrq4E2qYBQWGIfZZBwWj0nRoHFw1FSpGS6Tr+3b7x986ODePd7ea2ONDASNmJbj4LZ3b/1q
        D/f5p3Nybs+orxd1DQ31P/Czj9uJgIAfog4Eb/s9LS3WUyQqt4S0n52flz2+q4luIweeQVuTSfXra1rm
        7fPt8ePxB32fFeU61tSUW6ZfTllpN6hXKXo1AwyvC+O2+a4jr50+GbwZooUW6V3fBaIQ+Ts9Ya0GVIgq
        qAwebFr2pCBrfOHT7LFmZpqVOM3OgYfQV6NTQXt+CmtsqDIllfGuVJYXDLLtZ1ZOg3vx+OoUCyoCZwb4
        fAbFgWdAT+lh0aV29tyZl84mJ3odi436Rd9AKENP4nDpTZ6i10Fb0uQ9kHDYDrYqWOU279yt2+mu4rqq
        nvmP73/l5+dxWAD9hCa07mFDrR//6u8d5erqnN6xE7R06Ee0EIgEUyY5Zm7xWX8s5exxr5xHt6bm5dya
        tj9w0++acC0uY+MRDFTr4/NdfFlZoV19fY3ppUsJayws1ERoHOx/dOD49XjbzLRz0e6k930bRKFUIu5o
        qE1XokGMDXjUmeSYTRJpXceN3ksSmHBTHOTpgsdEhPrvVipkAlIZLaGq8umA4XY9i7gcJrVmzZozAQFb
        ovEFVaD1Y4zHGWc6PAuXw6AMDLQb/f03Rzx6lDXJw3NVAhMaCGZ/6GXOzs53Vq5YloqejHNtHYxolIuL
        05WnT3NGQevniESVlqtWLjzLhTI1oHL19ehUWOiO/bWiCqvi4if2G9xXnsZ348J9deD8Fzb6Ff5+ayMb
        G8WdZDJJhydPckZNGO+YibMTDKCbGV8cGuobpFDI1BsaROZ/Hgnb0a2jfo0a1JEQMNFRoXw8FyfUiyv+
        a6b8bRCFsdH7/DDz4EMrdXWdcKOiomigt8+qo5rQmjRBjiEt/miwH+na96FWVNxnrJNNHnawYJAjMK7h
        Z2Vdn9els0Zt0ywymw+drADCKI9iq6hCAqACIYUlO3Yswjc5OcFDW4dJqas/N5xV7x7Fx2Ii/VxnTbim
        LVChcPoGK9l11qQbleXFtjiALS0u+NJIh97k7TgQHjW8b2FFWZGdUiFXb2wQm15IS14vEDAVmBRg4oEe
        OWnKyFuxcVE/b/BcfdK4k5YYkwhsMIhBB716DQFfwlNlK1g0BsWlsSkBg0mx4XkwU1sw0+5evfj1mYzm
        eE0ALZ8HFZSDIUpLm0H9GXNwx/4g/4MaWnQlxk0DOJ5Nitj06nUfAj7wrGl2WZhlrVg+8+/y8qcOVdUl
        tudSEr26mZpU02nQwdN4kHUJKTaT35QlocdixXTqrFUfHnFg1xjnEfd09TQpJvRzQr4KNW7MiMykhPgt
        JkZGUuz30ANwIjR4v3/gg6zb01POJmxwdrTLRaM1VR5UvI2lYYmVhUFZly761erqahIun6d80W9xBSyK
        BmUzUB90VaGyMYHARoPPzYdzWJa2gEl17WhQ172Lcb0G6HXvIqxZNHvIzcqyvEGkdyfxmqCyLGeozef6
        NXjDzqZ6ddv8fOLUNNgyDBGfdeI2XkiNXffqNR+KTCo2+sXL9TQHWjQ2Bsy8MBPDVsqDDIjBYIAh+HBk
        gTHgf3iWFxkXBwyAnby6plCKFYhglsaGUIchDZMFbPEcLmRtoCeA8vg8FvRVKgrstzDUIQyscAD7MNTD
        UIpHdSGvqeJZ8DcuLQjhuTAd7t5FIJk+0fbBJo+FJwO2fBcdsMXtSKD/2oiTcSG/FBRkTTh0eOcOLW0a
        deJ4oD90+i0ay7wmyMm++HVHQ7aECw+OE45CdZYUxwtGHdjyq5cTV7+q30rQiwrufnXuVMjW+OO/bcfF
        Lhw/YOzH+I1HzJ5wghNpGhuB8RDMzrDV4mIaVjIXzqEhMCXmQzlY4WhkzMCwTJSjN+FKpxD6DZzptrbW
        r54wYfA9V9fxV7HyeXhvOKJ3+Xi5HU84Hrn5bFL0j8mno72PRe3zjQzz3Xfvdtp8sajECucDCe9DS02L
        dudD+R4eU5Jwioqk0xyvCXIf/DXTyIgvwbQTKwNdu6segzqXFAkhizyh2MrQ0y/EuLstHXN74ZxhmUvm
        O9xdNt/p9sb1s1I3ecxJ9vaYe3b75hXxu3/9PiokcGN41GH/wNg/A39NiAvZlnjiwPb0i3Fr79xMXnzv
        VvKizDvnFmTdPT/v/r3z8x5kps15eP+iy8P7f7nkZKd/nX0vbU5+ztVpzwrujC0rfmAvqi7sX1tT1PtR
        1l8uCUf3+FqbMeRmMGovLXow4rVnfIcplgtpMd/zoFG7zh56SyqpMSHpNMdrgvKS7BHdzLXEOCgTQCs0
        hBQydN9PQa2RZb0zME6QNFR3kzRWmUsaqswbGyrNpBJRZ0QmqTWBcNdRLqszkMvr9RWKRi2lQiqE5+M/
        f0alCrHMFoATqI11pb3ENU+t37e8lLN/eGIonDpx4MOGutKeJJ3meE2gUEiEY0da5WHmxYTT40cPuiMW
        lX7xql47bybpZKgPZmZfOVvn1dUWv/M8IEIU/n0pcZWB1nNPwf4kOAg85S3T7+38N7Exe/2w/xo90vKJ
        WPS0RY2aKETS046v7mTAlOHkIHaIqedjPEl67ZAJD9uyD/cufDXKOr/VjIIknzmyQR0n3aBwHR0VxaPs
        K7NIeu28zt5d7uFolCkTBmbXiVu2T5oofAFOzIUf8t+DRsHUdFBfw4qKUlzWJeu38x+2bl5yDI0ybcqQ
        rIa6ss9JOs1BFL6MVFpn7O31bWzTqiKMCyaO7pnTWF/Rg6Tbzn/w2jDnNBpl9izH240NFWYkneYgCl+l
        qrJwgMuM4Rk4QYlTBwvnfHlNIW/9Fbd/EssXO1/CAeq8uc43pI01n5F0moMoJJH36Pp0Kwv9KlzUQsP4
        b/k2mqTXznPmzhySgUZZ8s3EKzJprRFJpzmIwua4kHZsnaYaZGPglnqQkZ2JP+RF0muHoo12MMvFWe/V
        K10uymUNuiSd5iAK30RE+LZA/EwOZ0R7mQjrsu+kt/l9WiT69NKqwHm6tW7z0hTylu1ZIArfhr/ft0fw
        o1L8CsvJzqqoqDB7JEmvLdOpA1OGs8oe6xadVSikQpJOcxCFb0Mmq9ff6DnvOI74sY+ZPWP4bXFtaW+S
        blsFd7qgp3htWJqkVMo5JJ3mIArfhdra4j6zXUem8+DmuO7g6uKAGVn7J9j/AvtdnGX38VoV39JJTaLw
        XSkozHT+0qF7AW6iww9Ovb+fndjSVvFPBOsAVyMxkvzisyaWpPMmiMKWcCsjeZFFN14dflaHO+dDf9v6
        G0mvLSGXS7TQKJgM+W9xjyHpvAmisKUcjd7rixsqcKrfWJ+pvHYlcRVJr60gkYg7NS0dQ5+yY5vHEZLO
        myAKW45SZaf/94exc8Od87ZfGJYUPL4zkaz7zwe/esa1FNz1s3/npkMknTdBFL4PuN7ivdE1Th1CGK6n
        T5nQ/25N9dOBJN1/OiJRiTVO4mpB9AgL3hpC0nkTROH7Imms7rLsG6c0XAbFnShrvpuVKpM1dCDpUko5
        u6r88cCyktzhxUWPHEqKchxKinPty8oeD8UtsFWVBQOqkarCt4J7nmtFxdZ14rJeDfXVXWUSsaFcVq8H
        2aAmLhO3xhJxS6isLLDFjebYz0aG/bqPpPMmiMIPoaz0of0IB/M8XOPHHST+29z/IOlFhW7cPWlUj4Lh
        g7o/tbM1Lx7Q37TEdqBZsf1wiyL7Id2KRzlaPB7l9Pnj0QAenZ165o8B8Og80jJvrJNlXtNxtFXe5An9
        sqdNGJg9Y+qgrHmzna6vXDzx0uplky+sW/P1WY81M5O9Peed3OqzKNbfd0V00D73kJMn9v3y95W4bwue
        ZIyrFRX1lkpExvgDDPBcrfJzV6Ulufa4EwgTn5jIvbtIOm+CKPxQ7tw5v8DkM1UJfuuIPwUSFxPi+6rO
        EBthjRqMbzA5wP0AmNPjJw7460Z8OGLfhHvA8IifH6AMj/g/brrG/1+cf1kPz+Gufdyox0RATgc57hVj
        gfdyoaHg1h8dfYbc1Fy71qZ/l5JBwywKHJz65IwZZ5s9efLge96e35w8+sfe7XdupC4uLcq1F4vKLHEr
        LxhO/V287vHjzLFqYBA9IZ2K/TPYn6TzJojC1iD26H4/fDBMDY10mFTW3cuuL59PO3vYG7cvCTgsyshY
        o370qH7ZYxx75oxx+Dx3onO/7KnjBt13mW6f4TJ9RMZ8l9FXv3Edd3nxgomXVi6elrZq2fTUNStdzn3v
        Nhc8YcGpdXBE3FZ8nbJi8fS0uXPHXp40Zfgte0ebnN7WxiUa2mAszA7BWC828aHREDQgGu4FOImIv0mG
        m9s1wIi4cxIzS+wfNMGgmMzoaWEyo1u6xm1icnjYlj0XL0Svy3l0bVp5ef6QWlGpVXr6qdX4Aw+6YPz4
        o79vffm93wWisDXAWO7tuSReG14GNzwPtu5SVlX+xO7F+b/SojagZ+DGuQMHfINevvYjQYfWblRZnj84
        98HVGeeSwn8M2ukZ6u3uGr/c1enKqCGmhV+Yq4nMjdiNnQ2ZMn1NulIDjIAGwX3V2D/gIh/uqkej4RgE
        vVMN3gGPAlwEhHM8BGT4YREa9HDI1kDCs7wRorC1qBdX9Jg0xiYXP0tTg4fe4r0yHirGGM9FRvoFNM0E
        aNKo2Lj9W1699lMADYnXUFdh8ST/zrib15OXnzkV4R0VuevXoH0+Ids2rzrquW5ektuKGeddXUZfmT5+
        2F1nx/6PHAZbPRk8oHuRXZ/uJYP79yoeMtC8eMSXpoXjxvR4OGtKv8z01JjvSfd6E0Rha1JUeG+UtblW
        DX6cqq/OpBLjj/ykVCqZYQd99+Budvwm5FTS7z+Srv3/iVJFLm/UkjRUdxXXFlvXVBX2qyjLGVpanD3i
        OQ/sKyvy7cS1JZaSFq44voAobG1uXD293EiL3uTePcyMRfezbswKPuD3O+4Jxi+CzySG+pCua6sQha2P
        UuXI4YAdmBnhhz/jJjhmLlsxLw1/IEEDYu/JuAPbyNe1TYjCjwG4cuc137mcffHhqJaWhpTLYFM6XAb1
        56GA3aRr2ipE4cfi2bP7o80sNKq4AgbcWQUyFg6lDZ198F6P30n6bRWi8GOSkHjgJ6E6jAfYLIqvAkAC
        ELhjbQRJt61CFH5MpFKxkafH/JP41ZYWj930kyGQKsc8n6MiX9PWIAo/Ns8K7o/u21u/Cjf34fQ2TmvI
        Ze1LyS8gCv8XJByHMAYGwR9I8NnomtC+4/I/EIX/CxQQriLCtwQumT/4Wtbd8/81L9bWIQr/V+BXY1Jp
        rTH+2h7pfFuFKGzn00IUtvNpIQrb+ZRQtP8Dhm2zpBZKNOQAAAAASUVORK5CYII=
</value>
  </data>
</root>